// Code generated by protoc-gen-go.
// source: rpclog.proto
// DO NOT EDIT!

/*
Package rpclog is a generated protocol buffer package.

It is generated from these files:
	rpclog.proto

It has these top-level messages:
	Any
	Peer
	Entry
*/
package rpclog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Any struct {
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url" json:"type_url,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Any) Reset()         { *m = Any{} }
func (m *Any) String() string { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()    {}

type Peer struct {
	Address    string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	CommonName string `protobuf:"bytes,2,opt,name=common_name" json:"common_name,omitempty"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}

type Entry struct {
	Uuid         string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Peer         *Peer    `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	Method       string   `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	StartNs      int64    `protobuf:"varint,4,opt,name=start_ns" json:"start_ns,omitempty"`
	EndNs        int64    `protobuf:"varint,5,opt,name=end_ns" json:"end_ns,omitempty"`
	Request      *Any     `protobuf:"bytes,6,opt,name=request" json:"request,omitempty"`
	Error        string   `protobuf:"bytes,7,opt,name=error" json:"error,omitempty"`
	Response     *Any     `protobuf:"bytes,8,opt,name=response" json:"response,omitempty"`
	LoggingError []string `protobuf:"bytes,9,rep,name=logging_error" json:"logging_error,omitempty"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}

func (m *Entry) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Entry) GetRequest() *Any {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Entry) GetResponse() *Any {
	if m != nil {
		return m.Response
	}
	return nil
}
