// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats.proto

package qpov

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatsCPUTime struct {
	UserSeconds   int64 `protobuf:"varint,2,opt,name=user_seconds,json=userSeconds,proto3" json:"user_seconds,omitempty"`
	SystemSeconds int64 `protobuf:"varint,3,opt,name=system_seconds,json=systemSeconds,proto3" json:"system_seconds,omitempty"`
	// Standardized compute core-seconds.
	// Baseline CPU: One core from a "Core(TM)2 Quad CPU Q6600 @ 2.40GHz".
	ComputeSeconds       int64    `protobuf:"varint,4,opt,name=compute_seconds,json=computeSeconds,proto3" json:"compute_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsCPUTime) Reset()         { *m = StatsCPUTime{} }
func (m *StatsCPUTime) String() string { return proto.CompactTextString(m) }
func (*StatsCPUTime) ProtoMessage()    {}
func (*StatsCPUTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_2ec32975276ba8b7, []int{0}
}
func (m *StatsCPUTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsCPUTime.Unmarshal(m, b)
}
func (m *StatsCPUTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsCPUTime.Marshal(b, m, deterministic)
}
func (dst *StatsCPUTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsCPUTime.Merge(dst, src)
}
func (m *StatsCPUTime) XXX_Size() int {
	return xxx_messageInfo_StatsCPUTime.Size(m)
}
func (m *StatsCPUTime) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsCPUTime.DiscardUnknown(m)
}

var xxx_messageInfo_StatsCPUTime proto.InternalMessageInfo

func (m *StatsCPUTime) GetUserSeconds() int64 {
	if m != nil {
		return m.UserSeconds
	}
	return 0
}

func (m *StatsCPUTime) GetSystemSeconds() int64 {
	if m != nil {
		return m.SystemSeconds
	}
	return 0
}

func (m *StatsCPUTime) GetComputeSeconds() int64 {
	if m != nil {
		return m.ComputeSeconds
	}
	return 0
}

type MachineStats struct {
	// E.g. "Amazon/c4.8xlarge 36 x Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz".
	ArchSummary          string        `protobuf:"bytes,1,opt,name=arch_summary,json=archSummary,proto3" json:"arch_summary,omitempty"`
	Cpu                  string        `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	NumCpu               int32         `protobuf:"varint,3,opt,name=num_cpu,json=numCpu,proto3" json:"num_cpu,omitempty"`
	Cloud                *Cloud        `protobuf:"bytes,4,opt,name=cloud,proto3" json:"cloud,omitempty"`
	CpuTime              *StatsCPUTime `protobuf:"bytes,5,opt,name=cpu_time,json=cpuTime,proto3" json:"cpu_time,omitempty"`
	Jobs                 int64         `protobuf:"varint,6,opt,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineStats) Reset()         { *m = MachineStats{} }
func (m *MachineStats) String() string { return proto.CompactTextString(m) }
func (*MachineStats) ProtoMessage()    {}
func (*MachineStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_2ec32975276ba8b7, []int{1}
}
func (m *MachineStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineStats.Unmarshal(m, b)
}
func (m *MachineStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineStats.Marshal(b, m, deterministic)
}
func (dst *MachineStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineStats.Merge(dst, src)
}
func (m *MachineStats) XXX_Size() int {
	return xxx_messageInfo_MachineStats.Size(m)
}
func (m *MachineStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineStats.DiscardUnknown(m)
}

var xxx_messageInfo_MachineStats proto.InternalMessageInfo

func (m *MachineStats) GetArchSummary() string {
	if m != nil {
		return m.ArchSummary
	}
	return ""
}

func (m *MachineStats) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *MachineStats) GetNumCpu() int32 {
	if m != nil {
		return m.NumCpu
	}
	return 0
}

func (m *MachineStats) GetCloud() *Cloud {
	if m != nil {
		return m.Cloud
	}
	return nil
}

func (m *MachineStats) GetCpuTime() *StatsCPUTime {
	if m != nil {
		return m.CpuTime
	}
	return nil
}

func (m *MachineStats) GetJobs() int64 {
	if m != nil {
		return m.Jobs
	}
	return 0
}

type BatchStats struct {
	BatchId              string        `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Total                int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Done                 int64         `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	Comment              string        `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Ctime                int64         `protobuf:"varint,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	CpuTime              *StatsCPUTime `protobuf:"bytes,6,opt,name=cpu_time,json=cpuTime,proto3" json:"cpu_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BatchStats) Reset()         { *m = BatchStats{} }
func (m *BatchStats) String() string { return proto.CompactTextString(m) }
func (*BatchStats) ProtoMessage()    {}
func (*BatchStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_2ec32975276ba8b7, []int{2}
}
func (m *BatchStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchStats.Unmarshal(m, b)
}
func (m *BatchStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchStats.Marshal(b, m, deterministic)
}
func (dst *BatchStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchStats.Merge(dst, src)
}
func (m *BatchStats) XXX_Size() int {
	return xxx_messageInfo_BatchStats.Size(m)
}
func (m *BatchStats) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchStats.DiscardUnknown(m)
}

var xxx_messageInfo_BatchStats proto.InternalMessageInfo

func (m *BatchStats) GetBatchId() string {
	if m != nil {
		return m.BatchId
	}
	return ""
}

func (m *BatchStats) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *BatchStats) GetDone() int64 {
	if m != nil {
		return m.Done
	}
	return 0
}

func (m *BatchStats) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *BatchStats) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *BatchStats) GetCpuTime() *StatsCPUTime {
	if m != nil {
		return m.CpuTime
	}
	return nil
}

type StatsOverall struct {
	// When these stats were calculated.
	StatsTimestamp int64 `protobuf:"varint,1,opt,name=stats_timestamp,json=statsTimestamp,proto3" json:"stats_timestamp,omitempty"`
	// User and system time.
	CpuTime *StatsCPUTime `protobuf:"bytes,2,opt,name=cpu_time,json=cpuTime,proto3" json:"cpu_time,omitempty"`
	// (user_seconds+system_seconds) / CPU cores.
	MachineTime *StatsCPUTime `protobuf:"bytes,3,opt,name=machine_time,json=machineTime,proto3" json:"machine_time,omitempty"`
	// Total time completed leases have been outstanding.
	LeaseSeconds int64 `protobuf:"varint,4,opt,name=lease_seconds,json=leaseSeconds,proto3" json:"lease_seconds,omitempty"`
	// Split out by machine type.
	MachineStats         []*MachineStats `protobuf:"bytes,5,rep,name=machine_stats,json=machineStats,proto3" json:"machine_stats,omitempty"`
	BatchStats           []*BatchStats   `protobuf:"bytes,6,rep,name=batch_stats,json=batchStats,proto3" json:"batch_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsOverall) Reset()         { *m = StatsOverall{} }
func (m *StatsOverall) String() string { return proto.CompactTextString(m) }
func (*StatsOverall) ProtoMessage()    {}
func (*StatsOverall) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_2ec32975276ba8b7, []int{3}
}
func (m *StatsOverall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsOverall.Unmarshal(m, b)
}
func (m *StatsOverall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsOverall.Marshal(b, m, deterministic)
}
func (dst *StatsOverall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsOverall.Merge(dst, src)
}
func (m *StatsOverall) XXX_Size() int {
	return xxx_messageInfo_StatsOverall.Size(m)
}
func (m *StatsOverall) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsOverall.DiscardUnknown(m)
}

var xxx_messageInfo_StatsOverall proto.InternalMessageInfo

func (m *StatsOverall) GetStatsTimestamp() int64 {
	if m != nil {
		return m.StatsTimestamp
	}
	return 0
}

func (m *StatsOverall) GetCpuTime() *StatsCPUTime {
	if m != nil {
		return m.CpuTime
	}
	return nil
}

func (m *StatsOverall) GetMachineTime() *StatsCPUTime {
	if m != nil {
		return m.MachineTime
	}
	return nil
}

func (m *StatsOverall) GetLeaseSeconds() int64 {
	if m != nil {
		return m.LeaseSeconds
	}
	return 0
}

func (m *StatsOverall) GetMachineStats() []*MachineStats {
	if m != nil {
		return m.MachineStats
	}
	return nil
}

func (m *StatsOverall) GetBatchStats() []*BatchStats {
	if m != nil {
		return m.BatchStats
	}
	return nil
}

func init() {
	proto.RegisterType((*StatsCPUTime)(nil), "qpov.StatsCPUTime")
	proto.RegisterType((*MachineStats)(nil), "qpov.MachineStats")
	proto.RegisterType((*BatchStats)(nil), "qpov.BatchStats")
	proto.RegisterType((*StatsOverall)(nil), "qpov.StatsOverall")
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_stats_2ec32975276ba8b7) }

var fileDescriptor_stats_2ec32975276ba8b7 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x55, 0x36, 0x9b, 0x6c, 0x77, 0x92, 0x5d, 0x2a, 0x0b, 0x89, 0xc0, 0x69, 0x1b, 0x84, 0xe8,
	0x85, 0x95, 0x00, 0x21, 0xee, 0xec, 0x89, 0x03, 0x02, 0x79, 0xcb, 0x39, 0x72, 0x1c, 0x4b, 0x1b,
	0x14, 0xc7, 0x26, 0xb6, 0x2b, 0xf5, 0xc8, 0x0f, 0x21, 0xbe, 0x81, 0x2f, 0x43, 0x1e, 0x27, 0x69,
	0x8b, 0x54, 0xf5, 0x36, 0xf3, 0xf2, 0x66, 0xfc, 0x66, 0xde, 0x04, 0x32, 0x63, 0x99, 0x35, 0x7b,
	0x3d, 0x28, 0xab, 0xc8, 0xf2, 0xa7, 0x56, 0xd7, 0x2f, 0xb6, 0x52, 0x58, 0xd6, 0x30, 0xcb, 0x02,
	0x5a, 0xfe, 0x8a, 0x20, 0x3f, 0x7a, 0xd6, 0xe1, 0xdb, 0xf7, 0xab, 0x56, 0x0a, 0x72, 0x01, 0xb9,
	0x33, 0x62, 0xa8, 0x8c, 0xe0, 0xaa, 0x6f, 0x4c, 0xb1, 0xd8, 0x45, 0x97, 0x31, 0xcd, 0x3c, 0x76,
	0x0c, 0x10, 0x79, 0x05, 0x5b, 0x73, 0x63, 0xac, 0x90, 0x33, 0x29, 0x46, 0xd2, 0x26, 0xa0, 0x13,
	0xed, 0x35, 0x3c, 0xe1, 0x4a, 0x6a, 0x67, 0xc5, 0xcc, 0x5b, 0x22, 0x6f, 0x3b, 0xc2, 0x23, 0xb1,
	0xfc, 0x1b, 0x41, 0xfe, 0x85, 0xf1, 0x53, 0xdb, 0x0b, 0x94, 0xe2, 0x35, 0xb0, 0x81, 0x9f, 0x2a,
	0xe3, 0xa4, 0x64, 0xc3, 0x4d, 0x11, 0xed, 0xa2, 0xcb, 0x35, 0xcd, 0x3c, 0x76, 0x0c, 0x10, 0x39,
	0x87, 0x98, 0x6b, 0x87, 0xea, 0xd6, 0xd4, 0x87, 0xe4, 0x19, 0xac, 0x7a, 0x27, 0x2b, 0x8f, 0x7a,
	0x39, 0x09, 0x4d, 0x7b, 0x27, 0x0f, 0xda, 0x91, 0x0b, 0x48, 0x78, 0xa7, 0x5c, 0x83, 0xaf, 0x67,
	0xef, 0xb2, 0xbd, 0x5f, 0xc4, 0xfe, 0xe0, 0x21, 0x1a, 0xbe, 0x90, 0x37, 0x70, 0xc6, 0xb5, 0xab,
	0x6c, 0x2b, 0x45, 0x91, 0x20, 0x8b, 0x04, 0xd6, 0xdd, 0xd5, 0xd0, 0x15, 0xd7, 0x0e, 0x77, 0x44,
	0x60, 0xf9, 0x43, 0xd5, 0xa6, 0x48, 0x71, 0x1c, 0x8c, 0xcb, 0x3f, 0x11, 0xc0, 0x27, 0x66, 0xf9,
	0x29, 0x8c, 0xf0, 0x1c, 0xce, 0x6a, 0x9f, 0x55, 0x6d, 0x33, 0xca, 0x5f, 0x61, 0xfe, 0xb9, 0x21,
	0x4f, 0x21, 0xb1, 0xca, 0xb2, 0x6e, 0x5c, 0x6d, 0x48, 0x7c, 0xcf, 0x46, 0xf5, 0x62, 0x5c, 0x25,
	0xc6, 0xa4, 0x80, 0x15, 0x57, 0x52, 0x8a, 0xde, 0xa2, 0xf6, 0x35, 0x9d, 0x52, 0xdf, 0x83, 0xcf,
	0x6a, 0x63, 0x1a, 0x92, 0x7b, 0x63, 0xa4, 0x8f, 0x8e, 0x51, 0xfe, 0x5e, 0x8c, 0xde, 0x7f, 0xbd,
	0x16, 0x03, 0xeb, 0x3a, 0xef, 0x18, 0x5e, 0x0c, 0x76, 0x30, 0x96, 0x49, 0x8d, 0xda, 0x63, 0xba,
	0x45, 0xf8, 0x6a, 0x42, 0xef, 0x3d, 0xb4, 0x78, 0x7c, 0x5f, 0x1f, 0x20, 0x97, 0xc1, 0xdf, 0x50,
	0x12, 0x3f, 0x58, 0x92, 0x8d, 0x3c, 0x2c, 0x7b, 0x09, 0x9b, 0x4e, 0x30, 0xf3, 0xff, 0xf9, 0xe4,
	0x08, 0x4e, 0x57, 0xf6, 0x11, 0x36, 0x53, 0x6f, 0x14, 0x59, 0x24, 0xbb, 0xf8, 0xb6, 0xf9, 0xdd,
	0xb3, 0xa2, 0x93, 0x88, 0xe0, 0xd0, 0x5b, 0xc8, 0x82, 0x43, 0xa1, 0x2c, 0xc5, 0xb2, 0xf3, 0x50,
	0x76, 0x6b, 0x24, 0x85, 0x7a, 0x8e, 0xeb, 0x14, 0xff, 0x99, 0xf7, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x22, 0xe6, 0xb7, 0x46, 0x58, 0x03, 0x00, 0x00,
}
